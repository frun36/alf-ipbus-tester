# Uses the .toml configuration file format, since it is readable and easy to use, 
# with existing parsing libraries for e.g. C++ 

[global]
name = "Example config"
register_file = "build/ftm_registers.csv"           # File from which to read the mock register map (relative to config file path)
rng_seed = 36                                       # Seed of the RNG used for sequence randomisation (1 by default)
alf = { name = "ALF_MOCK", serial = 0, link = 0 }   # Parameters of tested ALF

[[tests]]
name = "Write test"
enabled = true
registers = [                                       # List of registers to be tested
    { begin = 0x0, end = 0xf },                     # A register block, from begin to end inclusively
    0x1004, 
    0x1005, 
]
operations = [                                      # List of operations to be performed on each register
    { type = "read" },
    { type = "write", data = [0xdeadbeef] },
    { type = "rmw_bits", data = [0xfffff000, 0x00000001] },
]
randomise_response = true                           # Whether response from mock should be randomised to simulate failure (false by default)
randomise_operations = true                         # Whether order of operations should be randomised (false by default)
split_seq = true                                    # Whether operations for different registers should be in separate sequences (false by default)
repeats = 100                                       # Repeats the test a specified number of times (1 by default)
wait = 10000                                        # Wait time after each test repeat (in us, 0 by default)

# Notes:
# - same type of RNG is used for `mock` and `generator`, for predictable results and synchronisation